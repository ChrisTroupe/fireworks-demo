{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Scroll.js","components/ErrorBoundry.js","containers/MovieApp.js","containers/SeriesApp.js","containers/MainApp.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","props","className","alt","src","url","name","CardList","StreamingDetails","cardComponenet","map","element","i","key","title","images","SearchBox","searchChange","type","placeholder","onChange","Header","href","Footer","id","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","MovieApp","onSearchChange","event","searchfield","target","value","console","log","fetch","then","response","json","video","entries","count","filteredResults","filter","releaseYear","programType","toLowerCase","includes","sort","a","b","length","ErrorBoundry","SeriesApp","MainApp","changeToMovies","navPage","changeToShows","onClick","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.41395a40.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './Card.css';\n\n\n// Destructuring of the props that were passed in\n// <img alt = 'Movietitle' src = {cover} width='200px'/> \nconst Card = (props) => {\n    return (\n        <div className = 'custom pa2 tc bg-light-green dib br3 ma1 grow bw2 shadow-5'> \n            <img alt='movie' src={props.url} />\n            <div className = 'words'>\n                <h6> {props.name} </h6>\n            </div>     \n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n// instead of importing you can receive the list from one layer up\n\nconst CardList = ({StreamingDetails}) => {\n\nconst cardComponenet = StreamingDetails.map((element, i) => {\n  return ( <Card \n            key={StreamingDetails[i].title}\n            name={StreamingDetails[i].title}\n            url={StreamingDetails[i].images[\"Poster Art\"].url} \n          /> \n        );  \n})\n\n    return (\n        <div> \n           {cardComponenet}\n        </div> \n    );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div> \n            <input \n                className='pa3 ma3 ba b--green bg-lightest-blue'\n                type ='search' \n                placeholder = 'search by title'\n                onChange={searchChange}\n            />\n        </div> \n\n\n    );\n}\n\nexport default SearchBox;","import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n    return(\n        <div className='header'> \n            <nav className=\"zone sticky\">\n                <ul className=\"main-nav\">\n                    <li className = \"push\"> DEMO Streaming </li>\n                    <li ><a href=\"www.google.com\">Contact</a></li>\n                    <li > <a href=\"www.google.com\"> Start your free trial </a> </li>\n                </ul>\n\n                <ul className=\"current-nav\">\n                    <div className =\"screen\"> Popular titles </div>\n                </ul>\n            </nav>\n        </div> \n    );\n}\n\nexport default Header; ","import React from 'react';\nimport './Footer.css';\n\n\nconst Footer = () => \n{\n        return(\n            <footer id=\"footer\">\n                 <div id = \"links\">\n                    <a href=\"/home/\"> Home</a> |\n                    <a href=\"/terms/\"> Terms and Conditions</a> |\n                    <a href=\"/privacy/\"> Privacy Policy</a> |\n                    <a href=\"/collection/\"> Collection Statement</a> |\n                    <a href=\"/help/\"> Help</a> |\n                    <a href=\"/manage/\"> Manage Account</a>\n                </div>\n                        \n\n\n            </footer>\n        );\n}\n\nexport default Footer;","import React from 'react';\n\nconst Scroll = (props) => {\n    return(\n        <div style = {{overflowY: 'scroll', border: '2px solid black', height: '33rem'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component{\n    constructor(){\n        super();\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <h1> Something has gone wrong... </h1>\n            )\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox.js';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Scroll from '../components/Scroll.js';\nimport ErrorBoundry from '../components/ErrorBoundry.js';\n\n\nclass MovieApp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            StreamingDetails: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() { \n    fetch('https://raw.githubusercontent.com/StreamCo/react-coding-challenge/master/feed/sample.json') \n    .then(response => response.json()) \n    .then(video => this.setState({StreamingDetails: video.entries}));\n    }\n\n    onSearchChange = (event)  => {\n    this.setState({searchfield: event.target.value});\n    console.log(event.target.value);\n    \n}\n\n    render() {\n        \n        let count = 0;\n        const filteredResults = this.state.StreamingDetails.filter(video => {\n            if(video.releaseYear > 2010 \n                && video.programType === 'movie' \n                && count <= 21\n                && video.title.toLowerCase().includes(this.state.searchfield.toLowerCase())\n                ) {\n                    count++;\n            }\n            return(\n                video.releaseYear > 2010\n                && video.programType === 'movie'\n                && count <= 21\n                && video.title.toLowerCase().includes(this.state.searchfield.toLowerCase())\n            )   \n        })\n        \n        // sort the list alphabetically \n        filteredResults.sort((a,b) => (a.title > b.title) ? 1: -1);\n\n       if(this.state.StreamingDetails.length === 0){\n           return (<h1> Loading </h1>) \n       } else {\n            return(\n                <div>\n                    <section> \n                        <Header/> \n                    </section>\n                    <Scroll> \n                        <ErrorBoundry>\n                            <div className = 'tc'>\n                                <SearchBox searchChange = {this.onSearchChange}/> \n                                <CardList StreamingDetails = {filteredResults} /> \n                            </div> \n                        </ErrorBoundry>\n                    </Scroll> \n\n                    <section>\n                        <Footer/> \n                    </section> \n\n                </div> \n            );\n       }\n        \n    }\n}\n\nexport default MovieApp;","import React, {Component} from 'react';\nimport CardList from '../components/CardList.js';\nimport SearchBox from '../components/SearchBox.js';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Scroll from '../components/Scroll.js';\n\n\nclass SeriesApp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            StreamingDetails: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() { \n    fetch('https://raw.githubusercontent.com/StreamCo/react-coding-challenge/master/feed/sample.json') \n    .then(response => response.json()) \n    .then(video => this.setState({StreamingDetails: video.entries}));\n    }\n\n    onSearchChange = (event)  => {\n    this.setState({searchfield: event.target.value});\n    \n}\n\n    render() {\n        \n        let count = 0;\n        const filteredResults = this.state.StreamingDetails.filter(video => {\n            if(video.releaseYear > 2010 \n                && video.programType === 'series' \n                && count <= 21\n                && video.title.toLowerCase().includes(this.state.searchfield.toLowerCase())\n                ) {\n                    count++;\n            }\n            return(\n                video.releaseYear > 2010\n                && video.programType === 'series'\n                && count <= 21\n                && video.title.toLowerCase().includes(this.state.searchfield.toLowerCase())\n            )   \n        })\n\n       if(this.state.StreamingDetails.length === 0){\n           return (<h1> Loading </h1>) \n       } else {\n            return(\n                <div>\n                    <section> \n                        <Header/> \n                    </section>\n                    <Scroll> \n                        <div className = 'tc'>\n                            <SearchBox searchChange = {this.onSearchChange}/> \n                            <CardList StreamingDetails = {filteredResults} /> \n                        </div> \n                    </Scroll> \n\n                    <section>\n                        <Footer/> \n                    </section> \n\n                </div> \n        );\n       }\n        \n    }\n}\n\nexport default SeriesApp;","import React, {Component} from 'react';\nimport MovieApp from './MovieApp.js';\nimport SeriesApp from './SeriesApp.js';\nimport './MainApp.css';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Scroll from '../components/Scroll.js'\n\n\nclass MainApp extends Component{\n    constructor() {\n        super();\n        this.state = {\n            navPage: 'titleScreen'\n        }\n    }\n\nchangeToMovies= (event) => {\n    this.setState({navPage: 'movie'});\n}\nchangeToShows = (event) => {\n    this.setState({navPage: 'series'});\n}\n\n    render() {\n\n        if(this.state.navPage === 'movie') {\n            return (\n                <MovieApp/> \n            )\n        }\n        else if(this.state.navPage === 'series') {\n            return (\n                <SeriesApp/> \n            )\n        }\n        else{\n            return(\n                <div> \n                    <section> \n                        <Header/> \n                    </section> \n                    <Scroll> \n                        <section className ='buttonSection'>\n                            <button onClick={this.changeToMovies} className= 'ma4 eachButton'>\n                            MOVIES\n                            </button>                    \n                            <button onClick={this.changeToShows} className= 'ma4'>\n                            SERIES\n                            </button>\n                        </section> \n                    </Scroll> \n\n                    <section>\n                        <Footer/> \n                    </section> \n                </div> \n            )\n        }\n    }\n\n}\n\nexport default MainApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport MainApp from './containers/MainApp.js'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <div> \n      <MainApp/> \n    </div> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}